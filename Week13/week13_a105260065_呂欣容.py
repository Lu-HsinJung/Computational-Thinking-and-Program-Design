# -*- coding: utf-8 -*-
"""Week13_A105260065_呂欣容.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1qIXujfJyDzWEYfcpE-ieFRswEi6xkuIa

隨堂練習: 從 1 到 1000 的整數中隨機抽樣，記錄第幾次可以抽到 56 的倍數（難）
"""

from random import sample

n_samples = 0
while True:
    random_integer = sample(range(1, 1001), 1)[0]
    n_samples += 1
    if random_integer % 56 == 0:
        break
print(random_integer)
print(n_samples)

sample_history = []
while True:
    random_integer = sample(range(1, 1001), 1)[0]
    sample_history.append(random_integer)
    if random_integer % 56 == 0:
        break
print(sample_history)
print(len(sample_history))

"""隨堂練習: 計算字串英文字母的母音（a, e, i, o, u）個數"""

n_vowels = 0 
for i in 'azcbobobegghak':
    if i in ['a', 'e', 'i', 'o', 'u']:
        #print(i)
        n_vowels += 1
print(n_vowels)

"""隨堂練習: 計算字串裡面 'bob' 出現的次數"""

test_str = 'azcbobobegghak'
n_char = len(test_str)
n_bobs = 0
for i in range(n_char - 2):
    #print(test_str[i:i+3])
    if test_str[i:i+3] == 'bob':
        n_bobs += 1
print(n_bobs)

"""隨堂練習: 計算 range(1, 101) 的樣本標準差"""

x = list(range(1, 101))
N = len(x)
x_bar = sum(x) / N
sse = 0
for xi in x:
    #error = xi - x_bar
    squared_error = (xi - x_bar)**2
    sse += squared_error #sse = sse + squared_error
sample_mse = sse / (N-1)
sample_stdev = sample_mse**(0.5)
print(sample_stdev)

from statistics import stdev

stdev(range(1, 101)) # [1, 2, 3, ..., 100]

"""隨堂練習: 寫作一個函數 get_fahrenheit() 將攝氏氣溫轉換為華氏氣溫
Fahrenheit=Celsius×9/5+32
"""

def get_fahrenheit(x):
    """
    Transform a Celsius degree into  Farenheit scale
    """
    fah = x * 9/5 + 32
    return fah
get_fahrenheit(32)

"""隨堂練習: 寫作一個函數 get_bmi() 計算 BMI 身體質量指數
BMI=weight(kg)/height(m)**2
"""

def get_bmi(height, weight):
    """
    Calculate BMI based on height and weight
    """
    height = height / 100
    bmi = weight / height**2
    return bmi

get_bmi(198, 129)

get_bmi(216, 147)

"""隨堂練習: 寫作一個函數 is_prime() 判斷輸入是否為質數"""

def is_prime(x):
    """
    Returns True if x is a prime, or returns False
    """
    divisors = []
    for i in range(1, x+1):
        if x % i == 0:
            divisors.append(i)
    n_divisors = len(divisors)
    return n_divisors == 2

is_prime(1)

is_prime(2)

is_prime(8)

